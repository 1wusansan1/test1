'''
可变（元组tuple/数字/str字符串/set集合）
不重复
不可变类型变量(元组/数/字符串)组成的可变散列容器
只有键没有值
乱序，不能索引，切片
'''
print('=============================================创建集合')
# 方式一 集合名 = {元素1,元素2,元素3}
s1 = {1, 2, 3}
# 方式二 集合名 = set(可迭代对象)
t1 = tuple(range(10))
s1 = set(t1)
print(s1)
s2 = set()  # 空集合

print('=============================================添加元素')
s1.add(100)
print('=============================================遍历集合')
# 无序，不能索引 切片
for item in s1:
    print(item)
print('=============================================删除元素')
s1.remove(100)
print('=============================================元素不重复的，len长度')
l1 = ['a', 'b', 'c'] * 30  # list列表
s4 = set(l1)
print(len(s4))
s4.add('d')
print(s4)
s4.remove('a')
print(s4)

print('=============================================交集&并集|：返回共同元素。')
s1 = {1, 2, 3}
s2 = {2, 3, 4}
s3 = s1 & s2  # {2, 3}
print(s1.intersection(s2))
print(s3)
print(s1 | s2)
print('=============================================补集-：返回只属于其中之一的元素')
s1 = {1, 2, 3}
s2 = {2, 3, 4}
print(s1 - s2)  # {1} 属于s1但不属于s2
print('=============================================补集^：返回不同的的元素，两个集合独有的元素')
s1 = {1, 2, 3}
s2 = {2, 3, 4}
s3 = s1 ^ s2  # {1, 4}  等同于(s1-s2 | s2-s1),两个集合独有的元素
print(s3)
print('=============================================子集< ，超集> ')
# ：判断一个集合的所有元素是属于另一个集合中一部分 <
# ：判断一个集合是否具有另一个集合的所有元素,并元素数大于另一个集合 >
s1 = {1, 2, 3}
s2 = {2, 3}
print(s2 < s1)  # True
print(s1 > s2)  # True
print('===================================相同或不同== !=：判断集合中的所有元素是否和另一个集合相同。')

s1 = {1, 2, 3}
s2 = {3, 2, 1}
print(s1 == s2)  # True
print(s1 != s2)  # False

print('======================================集合推导式。表达式 for')

# { 表达式 for 变量 in 可迭代对象 }
# { 表达式 for 变量 in 可迭代对象 if 条件语句 }
# { 表达式 for 变量1  in 可迭代对象1 for 变量2 in 可迭代对象2 if 条件语句}
l1 = list(range(10))
s1 = {x + 1 for x in l1}
print(s1)
varset = {1, 2, 3, 4}
newset = {i << 2 for i in varset if i % 2 == 0}
print(newset)  # {8, 16}
varsl = {1, 2, 3}
vars2 = {4, 5, 6}
newset = {i + j for i in varsl for j in vars2 if i % 2 == 0 and j % 2 == 0}
print(newset)  # {8, 6}
